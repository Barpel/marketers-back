{"version":3,"sources":["assets/imgs/landing.jpg","pages/HomePage/HomePage.js","components/CustomSelect/CustomSelect.js","components/CustomRange/CustomRange.js","pages/MarketerEdit/MarketerEdit.js","components/NavBar/NavBar.js","pages/AdminLogin/AdminLogin.js","pages/AdminPage/AdminPage.js","components/PrivateRoute/PrivateRoute.js","App.js","serviceWorker.js","services/MarketerService.js","store/MarketerStore.js","services/AdminService.js","store/AdminStore.js","index.js","store/RootStore.js"],"names":["module","exports","__webpack_require__","p","HomePage","inject","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","marketerStore","store","state","react_default","a","createElement","className","src","landingImg","alt","marketersCount","NavLink","to","Component","CustomSelect","style","optsClass","selectTitle","selectProps","name","setState","content","_this2","_this$state","onClick","showOpts","contentList","map","idx","key","onOptSelected","values","changeTitle","ref","CustomRange_CustomRange","title","type","min","minVal","max","maxVal","value","currVal","onChange","onRangeChange","step","MarketerEdit","marketer","firstName","lastName","email","siteUrl","linkedInUrl","experience","budget","customSelectProps","showConfirmation","alert","show","msg","handleChange","bind","assertThisInitialized","handleSubmit","handleSelect","handleRange","resetForm","toggleAlert","ev","objectSpread","target","val","defineProperty","prop","preventDefault","validateEmail","fetchMarketerByEmail","then","saveMarketer","res","_this3","setTimeout","onSubmit","placeholder","required","CustomSelect_CustomSelect_CustomSelect","version","xmlns","viewBox","fill","stroke","strokeWidth","strokeMiterlimit","cx","cy","r","strokeLinecap","points","react_fontawesome_index_es","icon","faTimesCircle","NavBar_NavBar","exact","activeClassName","AdminLogin","adminStore","admin","username","password","isLoggedIn","loginAdmin","isAdminLogged","Redirect","AdminPage","selectedSort","sortParam","fetchMarketers","marketers","sortTable","_id","href","rel","faLinkedin","faExternalLinkAlt","dist_default","format","createdAt","PrivateRoute","_ref","component","rest","objectWithoutProperties","Route","assign","render","library","add","fab","App","renderLogin","pages_AdminLogin_AdminLogin","BrowserRouter","Switch","path","observable","Boolean","window","location","hostname","match","BASE_URL","MarketerService","getMarketers","arguments","length","undefined","axios","get","concat","data","getMarketerByEmail","getMarketerById","marketerId","marketerData","Date","now","post","deleteMarketer","delete","test","MarketerStore","rootStore","initializerDefineProperty","MarketerStore_descriptor","_descriptor2","computed","action","AdminService","AdminStore","AdminStore_descriptor","adminCredentials","RootStore","ReactDOM","index_module","Fragment","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ff4f6ba9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/landing.efe55dd9.jpg\";","import React, { Component } from 'react';\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './HomePage.scss';\r\n\r\nimport landingImg from '../../assets/imgs/landing.jpg';\r\n\r\n@inject('store')\r\n@observer\r\nclass HomePage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {}\r\n    }\r\n    marketerStore = this.props.store.marketerStore;\r\n\r\n    render() {\r\n        return (\r\n            <section className=\"home-page\">\r\n                <img src={landingImg} alt=\"This must be the place\" />\r\n                <h1>\r\n                    Welcome!<br />\r\n\r\n                    <span>{this.marketerStore.marketersCount}</span>\r\n                     &nbsp;Amazing {this.marketerStore.marketersCount > 1 ? 'Marketers have ' : 'Marketer has '} already joined us!\r\n                </h1>\r\n                <NavLink to=\"/marketer/register\">\r\n                    <button>Join</button>\r\n                </NavLink>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default HomePage;","import React, { Component } from 'react';\r\nimport './CustomSelect.scss';\r\n\r\nexport default class CustomSelect extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { optsClass: 'hidden', selectTitle: props.selectProps.name }\r\n        // this.showOpts = this.showOpts.bind(this)\r\n    }\r\n    style = {}\r\n    showOpts() {\r\n        if (this.state.optsClass === 'hidden') {\r\n            this.setState({ optsClass: 'shown' })\r\n        } else this.setState({ optsClass: 'hidden' })\r\n    }\r\n    changeTitle(content) {\r\n        this.setState({ selectTitle: content })\r\n    }\r\n    render() {\r\n        const { optsClass, selectTitle } = this.state\r\n        return (\r\n            <div className=\"custom-select\" >\r\n                <span onClick={() => this.showOpts()}>\r\n                    <span >{selectTitle}</span>\r\n                    <span>⮟</span>\r\n                </span>\r\n                <ul className={optsClass}>\r\n                    {this.props.selectProps.contentList.map((content, idx) =>\r\n                        <li key={idx}\r\n                            onClick={() => {\r\n                                this.props.onOptSelected(this.props.selectProps.name,\r\n                                    this.props.selectProps.values[idx])\r\n                                this.changeTitle(content)\r\n                                this.showOpts()\r\n                            }}\r\n                            ref={idx}>\r\n                            {content}\r\n                        </li>)\r\n                    }\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport './CustomRange.scss';\r\n\r\nexport default props => {\r\n    return (\r\n        <div className=\"custom-range\">\r\n            <h3>{props.title}</h3>\r\n            <div className=\"range-container\">\r\n                <input type=\"range\" min={props.minVal} max={props.maxVal} className=\"range\" value={props.currVal} onChange={props.onRangeChange} step={props.step} />\r\n            </div>\r\n            <div className=\"vals-container\">\r\n                <span>{props.minVal / 1000}K$</span>\r\n                <span>{props.currVal / 1000}K$</span>\r\n                <span>{props.maxVal / 1000}K$</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, { Component } from 'react';\r\nimport './MarketerEdit.scss';\r\n\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport CustomSelect from '../../components/CustomSelect/CustomSelect';\r\nimport CustomRange from '../../components/CustomRange/CustomRange';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimesCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@inject('store')\r\n@observer\r\nclass MarketerEdit extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            marketer: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                siteUrl: '',\r\n                linkedInUrl: '',\r\n                experience: 0,\r\n                budget: 1000\r\n            },\r\n            customSelectProps: {\r\n                values: [0, 1, 2, 3],\r\n                contentList: ['No Experience', '0-1 Years', '1-2 Years', 'Above 2 years'],\r\n                name: 'experience'\r\n            },\r\n            showConfirmation: false,\r\n            alert: { show: false, msg: '' }\r\n        }\r\n\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.handleSelect = this.handleSelect.bind(this);\r\n        this.handleRange = this.handleRange.bind(this);\r\n        this.resetForm = this.resetForm.bind(this);\r\n        this.toggleAlert = this.toggleAlert.bind(this);\r\n    }\r\n\r\n    store = this.props.store;\r\n    marketerStore = this.props.store.marketerStore;\r\n\r\n    handleRange(ev) {\r\n        this.setState({\r\n            marketer: {\r\n                ...this.state.marketer,\r\n                budget: ev.target.value\r\n            }\r\n        });\r\n        // console.log(this.state.marketer.budget);\r\n    }\r\n\r\n    handleSelect(name, val) {\r\n        this.setState({\r\n            marketer: {\r\n                ...this.state.marketer,\r\n                [name]: val\r\n            }\r\n        });\r\n        // console.log(this.state.marketer[name]);\r\n    }\r\n\r\n    handleChange(ev) {\r\n        var prop = ev.target.name\r\n        this.setState({\r\n            marketer: {\r\n                ...this.state.marketer,\r\n                [prop]: ev.target.value\r\n            }\r\n        })\r\n    }\r\n\r\n    handleSubmit(ev) {\r\n        ev.preventDefault();\r\n        const { email } = this.state.marketer;\r\n        var isEmailValid = this.marketerStore.validateEmail(email);\r\n        if (isEmailValid) {\r\n            this.marketerStore.fetchMarketerByEmail(email)\r\n                .then(marketer => {\r\n                    if (!marketer) {\r\n                        this.marketerStore.saveMarketer(this.state.marketer)\r\n                            .then(res => {\r\n                                this.setState({ showConfirmation: true });\r\n                            })\r\n                    } else this.toggleAlert('Already Registered!')\r\n                })\r\n        } else {\r\n            this.toggleAlert('Please enter a valid email');\r\n        }\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            marketer: {\r\n                firstName: '',\r\n                lastName: '',\r\n                email: '',\r\n                siteUrl: '',\r\n                linkedInUrl: '',\r\n                experience: null,\r\n                budget: 1000\r\n            }\r\n        })\r\n    }\r\n\r\n    toggleAlert(msg) {\r\n        this.setState({\r\n            alert: {\r\n                show: true,\r\n                msg\r\n            }\r\n        })\r\n        setTimeout(() => {\r\n            this.setState({ alert: { show: false, msg: '' } })\r\n        }, 5000)\r\n    }\r\n\r\n    render() {\r\n        const { marketer, showConfirmation, alert } = this.state\r\n        return (\r\n            <div className=\"marketer-edit-wrapper\">\r\n                <h1>Register</h1>\r\n                {\r\n                    !showConfirmation &&\r\n                    <form onSubmit={this.handleSubmit} className=\"marketer-edit-form\">\r\n                        <label>\r\n                            <input type=\"text\" name=\"firstName\"\r\n                                onChange={this.handleChange} value={marketer.firstName} placeholder=\"First Name\" />\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"text\" name=\"lastName\" onChange={this.handleChange} value={marketer.lastName} placeholder=\"Last Name\" />\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"text\" name=\"email\"\r\n                                onChange={this.handleChange} value={marketer.email} required placeholder=\"Email\" />\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"text\" name=\"siteUrl\" onChange={this.handleChange} value={marketer.siteUrl} placeholder=\"Website Link\" />\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"text\" name=\"linkedInUrl\" onChange={this.handleChange} value={marketer.linkedInUrl} placeholder=\"LinkedIn\" />\r\n                        </label>\r\n                        <label>\r\n                            <h3>\r\n                                How many years of experience do you have with Facebook Marketing? <br />\r\n                            </h3>\r\n                            <CustomSelect onOptSelected={this.handleSelect}\r\n                                selectProps={this.state.customSelectProps}></CustomSelect>\r\n                        </label>\r\n                        <label>\r\n                            <CustomRange minVal={1000} maxVal={500000} currVal={marketer.budget}\r\n                                onRangeChange={this.handleRange} step={1000} title=\"What was the biggest campagin budget you managed in a single month?\"></CustomRange>\r\n                        </label>\r\n                        <button type=\"submit\" className=\"submit-btn\">Save</button>\r\n                        <button type=\"button\" className=\"reset-btn\" onClick={this.resetForm}>Clear Form</button>\r\n                    </form>\r\n                }\r\n                {\r\n                    showConfirmation &&\r\n                    <div className=\"after-edit-container\">\r\n                        <svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 130.2 130.2\">\r\n                            <circle\r\n                                className=\"path circle\"\r\n                                fill=\"none\"\r\n                                stroke=\"#73AF55\"\r\n                                strokeWidth=\"6\"\r\n                                strokeMiterlimit=\"10\"\r\n                                cx=\"65.1\"\r\n                                cy=\"65.1\"\r\n                                r=\"62.1\"\r\n                            ></circle>\r\n                            <polyline\r\n                                className=\"path check\"\r\n                                fill=\"none\"\r\n                                stroke=\"#73AF55\"\r\n                                strokeWidth=\"6\"\r\n                                strokeLinecap=\"round\"\r\n                                strokeMiterlimit=\"10\"\r\n                                points=\"100.2,40.2 51.5,88.8 29.8,67.5 \"\r\n                            ></polyline>\r\n                        </svg>\r\n                        <h3 className=\"success\">Success! <br />\r\n                            Thank you, we will send you an email shortly.\r\n                        </h3>\r\n                    </div>\r\n                }\r\n                <div className={(alert.show) ? 'custom-alert shown' : 'custom-alert'}>\r\n                    <h3>{alert.msg}</h3>\r\n                    <FontAwesomeIcon icon={faTimesCircle} />\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MarketerEdit;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './NavBar.scss';\r\n\r\nexport default props => {\r\n    return (\r\n        <header className=\"nav-bar\">\r\n            <nav>\r\n                <ul>\r\n                    <NavLink exact activeClassName=\"active-link\" to=\"/\">\r\n                        <li>Home</li>\r\n                    </NavLink>\r\n                    <NavLink activeClassName=\"active-link\" to=\"/marketer/register\">\r\n                        <li>Register</li>\r\n                    </NavLink>\r\n                    <NavLink activeClassName=\"active-link\" to=\"/login\">\r\n                        <li>Admin</li>\r\n                    </NavLink>\r\n                </ul>\r\n            </nav>\r\n        </header>\r\n    )\r\n}","import React, { Component } from 'react';\r\n\r\nimport { observer, inject } from 'mobx-react';\r\n\r\nimport { Redirect } from 'react-router-dom';\r\n\r\nimport './AdminLogin.scss';\r\n\r\n@inject('store')\r\n@observer\r\nclass AdminLogin extends Component {\r\n    marketerStore = this.props.store.marketerStore;\r\n    adminStore = this.props.store.adminStore;\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = { admin: { username: '', password: '' }, isLoggedIn: false }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleChange(ev) {\r\n        const props = ev.target.name;\r\n        this.setState({\r\n            admin: {\r\n                ...this.state.admin,\r\n                [props]: ev.target.value\r\n            }\r\n        });\r\n    }\r\n\r\n    handleSubmit(ev) {\r\n        ev.preventDefault();\r\n        this.adminStore.loginAdmin(this.state.admin);\r\n        this.setState({ isLoggedIn: this.adminStore.isAdminLogged })\r\n    }\r\n\r\n    render() {\r\n\r\n        const { admin, isLoggedIn } = this.state;\r\n        return (\r\n            <section className=\"admin-login\">\r\n                {\r\n                    !isLoggedIn &&\r\n                    <form className=\"login-form\" onSubmit={this.handleSubmit}>\r\n                        <h1>Administrator Login</h1>\r\n                        <label>\r\n                            <input type=\"text\" placeholder=\"Username\" name=\"username\"\r\n                                onChange={this.handleChange} value={admin.username} />\r\n                        </label>\r\n                        <label>\r\n                            <input type=\"password\" placeholder=\"Password\" name=\"password\"\r\n                                onChange={this.handleChange} value={admin.password} />\r\n                        </label>\r\n                        <button type=\"submit\">Login</button>\r\n                    </form>\r\n                }\r\n                {\r\n                    isLoggedIn &&\r\n                    <Redirect to=\"/admin\" />\r\n                }\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminLogin;","import React, { Component } from 'react';\r\nimport { inject, observer } from 'mobx-react';\r\n\r\nimport Moment from 'react-moment';\r\nimport 'moment-timezone';\r\n\r\nimport './AdminPage.scss';\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLinkedin } from '@fortawesome/free-brands-svg-icons';\r\nimport { faExternalLinkAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\n@inject('store')\r\n@observer\r\nclass AdminPage extends Component {\r\n    selectedSort = 'createdAt';\r\n\r\n    sortTable(sortParam) {\r\n        this.selectedSort = sortParam;\r\n        this.props.store.marketerStore.fetchMarketers(sortParam)\r\n    }\r\n\r\n    render() {\r\n        const { marketers } = this.props.store.marketerStore;\r\n        return (\r\n            <div className=\"admin-page\">\r\n                <table>\r\n                    <thead>\r\n                        <tr>\r\n                            <td>\r\n                                #\r\n                            </td>\r\n                            <td onClick={() => this.sortTable('firstName')}\r\n                                className={(this.selectedSort === 'firstName') ? 'selected' : ''}>\r\n                                Name\r\n                            </td>\r\n                            <td onClick={() => this.sortTable('email')} className={(this.selectedSort === 'email') ? 'selected' : ''}>\r\n                                Email\r\n                            </td>\r\n                            <td>\r\n                                LinkedIn\r\n                            </td>\r\n                            <td>\r\n                                Website URL\r\n                            </td>\r\n                            <td onClick={() => this.sortTable('experience')}\r\n                                className={(this.selectedSort === 'experience') ? 'selected' : ''}>\r\n                                Experience\r\n                            </td>\r\n                            <td onClick={() => this.sortTable('budget')} className={(this.selectedSort === 'budget') ? 'selected' : ''}>\r\n                                Max Budget\r\n                            </td>\r\n                            <td onClick={() => this.sortTable('createdAt')} className={(this.selectedSort === 'createdAt') ? 'selected' : ''}>\r\n                                Created\r\n                            </td>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {marketers.map((marketer, idx) => {\r\n                            return <tr key={marketer._id}>\r\n                                <td>{idx + 1}</td>\r\n                                <td>\r\n                                    {\r\n                                        !!marketer.firstName || !!marketer.lastName\r\n                                            ? <span>{marketer.firstName} {marketer.lastName}</span>\r\n                                            : <span>Not Provided</span>\r\n                                    }\r\n                                </td>\r\n                                <td>{marketer.email}</td>\r\n                                <td>\r\n                                    {\r\n                                        !!marketer.linkedInUrl\r\n                                            ? <a\r\n                                                href={marketer.linkedInUrl}\r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\">\r\n                                                <FontAwesomeIcon icon={faLinkedin} />\r\n                                            </a>\r\n                                            : <span>None</span>\r\n                                    }\r\n\r\n                                </td>\r\n                                <td>\r\n                                    {\r\n                                        !!marketer.siteUrl\r\n                                            ? <a\r\n                                                href={marketer.siteUrl}\r\n                                                target=\"_blank\"\r\n                                                rel=\"noopener noreferrer\">\r\n                                                <FontAwesomeIcon icon={faExternalLinkAlt} />\r\n                                            </a>\r\n                                            : <span>None</span>\r\n                                    }\r\n                                </td>\r\n                                <td>\r\n                                    {\r\n                                        marketer.experience\r\n                                            ? <span>{marketer.experience} Years</span>\r\n                                            : <span>Not Provided</span>\r\n                                    }\r\n\r\n                                </td>\r\n                                <td>{marketer.budget / 1000}K$</td>\r\n                                <td><Moment format=\"HH:mm DD.MM.YYYY\">{marketer.createdAt}</Moment></td>\r\n                            </tr>\r\n                        })}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport default AdminPage;","import React from 'react';\r\nimport { Route, Redirect } from 'react-router-dom';\r\n\r\nexport default ({ component: Component, ...rest }) => {\r\n    const { isAdminLogged } = rest.store\r\n    return <Route {...rest} render={(props) => {\r\n        return isAdminLogged\r\n            ? <Component {...props} />\r\n            : <Redirect to=\"/login\" />\r\n    }} />\r\n}","import React, { Component } from 'react';\nimport './App.scss';\n\n//routing\nimport {\n  BrowserRouter as Router,\n  Route,\n  Switch\n} from 'react-router-dom';\n\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faExternalLinkAlt, faTimesCircle } from '@fortawesome/free-solid-svg-icons';\nimport { fab } from '@fortawesome/free-brands-svg-icons';\n\n//state (store)\nimport { inject } from 'mobx-react';\n\n//home page\nimport HomePage from './pages/HomePage/HomePage';\n\n//edit or add marketer\nimport MarketerEdit from './pages/MarketerEdit/MarketerEdit';\n\n//app navigation bar\nimport NavBar from './components/NavBar/NavBar';\n\n//login page\nimport AdminLogin from './pages/AdminLogin/AdminLogin';\n\n//admin page\nimport AdminPage from './pages/AdminPage/AdminPage';\n\n//private route for admins\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute';\n\nimport { observable } from 'mobx';\n\nlibrary.add(fab, faExternalLinkAlt, faTimesCircle)\n\n@inject('store')\nclass App extends Component {\n\n  adminStore = this.props.store.adminStore;\n\n  @observable\n  isAdminLogged = this.adminStore.isAdminLogged;\n\n  componentDidMount() {\n  }\n\n  renderLogin = props => {\n    return <AdminLogin {...props} />;\n  }\n\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <NavBar></NavBar>\n          <Switch>\n            <Route exact path=\"/\"\n              component={HomePage} />\n            <Route path=\"/marketer/register\"\n              component={MarketerEdit} />\n            <PrivateRoute store={this.adminStore} path=\"/admin\" component={AdminPage} />\n            <Route path=\"/login\"\n              render={this.renderLogin} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import axios from 'axios';\r\n\r\nconst BASE_URL = (process.env.NODE_ENV !== 'development') ?\r\n    '/api/marketer' : '//localhost:3000/api/marketer';\r\n\r\nexport default {\r\n    getMarketers,\r\n    getMarketerByEmail,\r\n    getMarketerById,\r\n    saveMarketer,\r\n    deleteMarketer,\r\n    validateEmail,\r\n}\r\n\r\nfunction getMarketers(sortParam = 'createdAt') {\r\n    return axios.get(`${BASE_URL}/?sort=${sortParam}`)\r\n        .then(res => res.data);\r\n}\r\n\r\nfunction getMarketerByEmail(email) {\r\n    return axios.get(`${BASE_URL}/email/${email} `)\r\n        .then(res => res.data);\r\n}\r\n\r\nfunction getMarketerById(marketerId) {\r\n    return axios.get(`${BASE_URL}/id/${marketerId} `)\r\n        .then(res => res.data);\r\n}\r\n\r\n\r\nfunction saveMarketer(marketerData) {\r\n    marketerData.createdAt = Date.now();\r\n    return axios.post(`${BASE_URL}`, marketerData).then(res => res.data);\r\n}\r\n\r\nfunction deleteMarketer(marketerId) {\r\n    return axios.delete(`${BASE_URL} /${marketerId}`)\r\n}\r\n\r\nfunction validateEmail(email) {\r\n    // eslint-disable-next-line\r\n    return (/^([a-zA-Z0-9_\\.\\-])+\\@(([a-zA-Z0-9\\-])+\\.)+([a-zA-Z0-9]{2,4})+$/.test(email));\r\n}\r\n\r\n\r\n\r\n\r\n","import MarketerService from '../services/MarketerService';\r\nimport { observable, action, computed } from 'mobx';\r\n\r\nexport default class MarketerStore {\r\n    @observable\r\n    marketer = null;\r\n\r\n    @observable\r\n    marketers = [];\r\n\r\n\r\n    @computed\r\n    get marketersCount() {\r\n        return this.marketers.length;\r\n    }\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @action\r\n    async fetchMarketers(sortParam) {\r\n        this.marketers = await MarketerService.getMarketers(sortParam);\r\n    }\r\n\r\n    @action\r\n    async fetchMarketerByEmail(email) {\r\n        return this.marketer = await MarketerService.getMarketerByEmail(email);\r\n    }\r\n\r\n    @action\r\n    async fetchMarketerById(marketerId) {\r\n        return this.marketer = await MarketerService.getMarketerById(marketerId);\r\n    }\r\n\r\n    async saveMarketer(marketerData) {\r\n        this.marketer = await MarketerService.saveMarketer(marketerData);\r\n        this.fetchMarketers();\r\n        return this.marketer;\r\n    }\r\n\r\n    async deleteMarketer(marketerId) {\r\n        return await MarketerService.deleteMarketer(marketerId);\r\n    }\r\n\r\n    validateEmail(email) {\r\n        return MarketerService.validateEmail(email);\r\n    }\r\n}\r\n","export default {\r\n    loginAdmin,\r\n\r\n}\r\n\r\nfunction loginAdmin({ username, password }) {\r\n    return (username === 'admin' && password === 'admin');\r\n}","import AdminService from '../services/AdminService';\r\nimport { observable, action } from 'mobx';\r\n\r\nexport default class AdminStore {\r\n\r\n    @observable\r\n    isAdminLogged = false;\r\n\r\n    constructor(rootStore) {\r\n        this.rootStore = rootStore;\r\n    }\r\n\r\n    @action\r\n    loginAdmin(adminCredentials) {\r\n        this.isAdminLogged = AdminService.loginAdmin(adminCredentials);\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './assets/index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport RootStore from './store/RootStore';\nimport { Provider } from 'mobx-react';\n\nconst rootStore = new RootStore();\n\nrootStore.marketerStore.fetchMarketers();\n\nReactDOM.render(\n    <Provider store={rootStore}>\n        <React.Fragment>\n            <App />\n        </React.Fragment>\n    </Provider>,\n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import MarketerStore from './MarketerStore';\r\nimport AdminStore from './AdminStore';\r\n\r\nexport default class RootStore {\r\n\r\n    constructor() {\r\n        this.marketerStore = new MarketerStore(this);\r\n        this.adminStore = new AdminStore(this);\r\n    }\r\n}"],"sourceRoot":""}